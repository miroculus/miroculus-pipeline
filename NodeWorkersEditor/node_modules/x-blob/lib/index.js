var azure = require("azure-storage");
var log = require("x-log");

module.exports = function (config) {
  
  var blobSvc;
  
  function init(cb) {
    var cb = cb || Function;
    
    blobSvc = azure.createBlobService(config.storageName, config.storageKey)
      .withFilter(new azure.ExponentialRetryPolicyFilter());
    
    return blobSvc.createContainerIfNotExists(config.blobName, function (err) {
      
      if (err) return cb(err);
      
      log.info('Opened connection on blob {}', config.blobName);
      
      return cb();
    });
  }
  
  function getFile(fileName, cb) {
    var cb = cb || Function;
    
    // Todo: in case the file is too big, use a stream or query by paging    
    blobSvc.getBlobToText(config.blobName, fileName, function (err, blobContent, blob) {
      if (err) return cb(err);
      
      log.info('Retrieved the content of {} from blob storage {}', fileName, config.blobName);
      return cb(null, blobContent, blob);
    });
  }
  
  function deleteFile(fileName, cb) {
    var cb = cb || Function;
    
    blobSvc.deleteBlob(config.blobName, fileName, function (error) {
      if (err) return cb(err);
      
      log.info('Deleted {} from blob storage {}', fileName, config.blobName);
      return cb();
    });
  }
  
  return {
    init: init,
    getFile: getFile,
    deleteFile: deleteFile
  };
};